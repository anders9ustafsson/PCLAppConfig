<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--Update with your target such as: Xamarin.iOS10 or MonoAndroid80 or Xamarin.Mac20-->
    <!--<TargetFramework>Xamarin.iOS10</TargetFramework>-->
        
    <!--To Multi-target you can do this-->
    <TargetFrameworks>MonoAndroid80;Xamarin.iOS10;uap10.0;netstandard2.0</TargetFrameworks>

    <!--<TargetFramework>Xamarin.iOS10</TargetFramework>-->
    
    <!--Assembly and Namespace info -->
    <AssemblyName>PCLAppConfig</AssemblyName>
    <RootNamespace>PCLAppConfig</RootNamespace>

    <PackageId>PCLAppConfig</PackageId>    
    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
    <Version>1.0.0.0</Version>
    <NeutralLanguage>en</NeutralLanguage>

    <!--<PackageProjectUrl>https://github.com/mrbrl/PCLAppConfig</PackageProjectUrl>
    <PackageLicenseUrl>http://opensource.org/licenses/Apache-2.0</PackageLicenseUrl>
    <PackageTags>xamarin xamarin.forms PCL Config App.Config AppSettings Configuration ConfigurationManager uwp android ios xamarin monoandroid monodroid monotouch xamariners</PackageTags>
    <PackageIconUrl>https://avatars2.githubusercontent.com/u/2474918</PackageIconUrl>
    <PackageReleaseNotes>
      - 1.0.0: Welcome to .Net Standard
      - 0.3.4: ProtableStream.Current now can be use in PCL project      -
      - 0.3.2: Update to latest dependencies, Update Doc
      - 0.3.1: Added tests and package icon
      - 0.3.0: Initial Release
    </PackageReleaseNotes>-->
    
    <!--Don't auto add files for me, I will tell you -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
   
    <!-- Helper to add defines-->
    <DefineConstants>$(DefineConstants);</DefineConstants>    
    
    <!--Assembly and Namespace info -->
    
    <!--Version of C# to use -->
    <LangVersion>default</LangVersion>
    
  </PropertyGroup>
  
  <!-- Define what happens on build and release -->
   <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
    <DebugType>pdbonly</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <!-- If we want a nuget package add this
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
     -->
  </PropertyGroup>
  
  <ItemGroup>
    <!-- This None is here so the conditionally included files show up in the Solution Explorer -->
    <None Include="**\*.cs;**\*.xml;**\*.axml;**\*.png" Exclude="bin\**\*.*;bin;**\obj" />
    
    <!--NuGet that bring in good stuff -->
    <PackageReference Include="MSBuild.Sdk.Extras" Version="1.4.0" PrivateAssets="All" />

    <!-- We will compile anything ending in .shared.cs  You can change this --> 
    <Compile Include="**\*.shared.cs" />
  </ItemGroup>
  
    <ItemGroup Condition=" $(TargetFramework.StartsWith('MonoAndroid')) ">
    <Compile Include="**\*.android.cs" />
    <!-- if you have resources add this
    <AndroidResource Include="Resources\**\*.axml" />
    <AndroidResource Include="Resources\**\*.xml" />
    <AndroidResource Include="Resources\**\*.png" />
    -->
  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
    <Compile Include="**\*.ios.cs" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  
  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />
</Project>